{"meta":{"title":"Hexo","subtitle":"","description":"","author":"echowrn","url":"http://ustcwrn.github.io","root":"/"},"pages":[{"title":"[404]","date":"2022-05-09T10:41:32.711Z","updated":"2022-05-09T10:41:32.711Z","comments":true,"path":"404.html","permalink":"http://ustcwrn.github.io/404.html","excerpt":"","text":""},{"title":"echowrn's blog","date":"2022-05-09T15:10:11.753Z","updated":"2022-05-09T10:44:06.467Z","comments":true,"path":"about/index.html","permalink":"http://ustcwrn.github.io/about/index.html","excerpt":"","text":"自我介绍正文"}],"posts":[{"title":"zzydhd","slug":"t3","date":"2022-05-09T16:00:00.000Z","updated":"2022-05-09T16:01:23.656Z","comments":true,"path":"2022/05/10/t3/","link":"","permalink":"http://ustcwrn.github.io/2022/05/10/t3/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960#include&lt;iostream&gt;#include&lt;vector&gt;#include&lt;queue&gt;using namespace std;const int dx[4] = &#123;0,1,0,-1&#125;,dy[4] = &#123;1,0,-1,0&#125;;vector&lt;vector&lt;int&gt;&gt; dist;vector&lt;vector&lt;int&gt;&gt; cnt;vector&lt;vector&lt;bool&gt;&gt; g;vector&lt;vector&lt;bool&gt;&gt; vis;int sx,sy,ex,ey;int n, m, k;void bfs() &#123; queue&lt;pair&lt;int,int&gt;&gt; q; q.push(&#123;sx,sy&#125;); cnt[sx][sy] = 1; dist[sx][sy] = 0; while(q.size()) &#123; pair&lt;int,int&gt; t = q.front; q.pop(); int x = t.first, y = t.second; if (vis[x][y]) continue; vis[x][y] = true; for(int idx =0; idx &lt; 4; idx++) &#123; int nx = x + dx[idx], ny = y + dy[idx]; if(0 &lt; nx &amp;&amp; nx &lt; n &amp;&amp; 0 &lt;= ny &amp;&amp; ny &lt; m &amp;&amp; g[nx][ny])&#123; if (dist[nx][ny] &gt; dist[x][y]+1) &#123; dist[nx][ny]= dist[x][y]+1; q.push(&#123;nx,ny&#125;); cnt[nx][ny] = cnt[x][y]; &#125;else if (dist[nx][ny]== dist[x][y]+1)&#123; cnt[nx][ny]+=cnt[x][y]; &#125; &#125; &#125; &#125;&#125;int main() &#123; cin &gt;&gt;n&gt;&gt;m; dist.resize(n,vector&lt;int&gt;(m,1e9)); cnt.resize(n,vector&lt;int&gt;(m,0)); g.resize(n,vector&lt;bool&gt;(m,true)); vis.resize(n,vector&lt;bool&gt;(m,false)); cin&gt;&gt;sx&gt;&gt;sy&gt;&gt;ex&gt;&gt;ey; cin&gt;&gt;k; while(k--) &#123; int x,y; cin&gt;&gt;x&gt;&gt;y; g[x][y] = false; &#125; bfs(); cout&lt;&lt;cnt[ex][ey]&lt;&lt;&#x27; &#x27;&lt;&lt;dist[ex][ey]; return 0;&#125;","categories":[],"tags":[{"name":"cpp","slug":"cpp","permalink":"http://ustcwrn.github.io/tags/cpp/"}]},{"title":"我的第一篇博客","slug":"My first blog","date":"2022-05-09T07:37:51.000Z","updated":"2022-05-09T13:09:53.716Z","comments":true,"path":"2022/05/09/My first blog/","link":"","permalink":"http://ustcwrn.github.io/2022/05/09/My%20first%20blog/","excerpt":"","text":"test","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2022-05-09T07:32:55.426Z","updated":"2022-05-09T07:32:55.427Z","comments":true,"path":"2022/05/09/hello-world/","link":"","permalink":"http://ustcwrn.github.io/2022/05/09/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"cpp","slug":"cpp","permalink":"http://ustcwrn.github.io/tags/cpp/"}]}