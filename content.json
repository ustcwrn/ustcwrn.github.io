{"meta":{"title":"echowrn's blog","subtitle":"","description":"","author":"echowrn","url":"http://ustcwrn.github.io","root":"/"},"pages":[{"title":"404","date":"2022-05-11T05:32:40.726Z","updated":"2022-05-11T05:32:40.726Z","comments":true,"path":"404.html","permalink":"http://ustcwrn.github.io/404.html","excerpt":"","text":""},{"title":"echowrn's blog","date":"2022-05-09T15:10:11.753Z","updated":"2022-05-09T10:44:06.467Z","comments":true,"path":"about/index.html","permalink":"http://ustcwrn.github.io/about/index.html","excerpt":"","text":"自我介绍正文"},{"title":"categories","date":"2022-05-11T05:30:18.000Z","updated":"2022-05-11T05:30:40.368Z","comments":true,"path":"categories/index.html","permalink":"http://ustcwrn.github.io/categories/index.html","excerpt":"","text":""},{"title":"","date":"2022-05-11T05:30:22.629Z","updated":"2022-05-11T05:30:22.629Z","comments":false,"path":"tags/index.html","permalink":"http://ustcwrn.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"使用github搭建hexo博客","slug":"使用github搭建hexo博客","date":"2022-05-18T13:28:18.000Z","updated":"2022-05-18T15:05:55.385Z","comments":true,"path":"2022/05/18/使用github搭建hexo博客/","link":"","permalink":"http://ustcwrn.github.io/2022/05/18/%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"所有命令建议使用 git bash来执行 一些准备下载并安装node.js: 官网：https://nodejs.org/en/ 执行命令 node -v验证是否安装成功 安装cnpm： 执行命令 npm install -g cnpm --registry==https://registry.npm.taobao.org 安装 执行cnpm -v验证是否安装成功 安装hexo框架： 命令：cnpm install -g hexo-cli 执行 hexo -v验证 搭建hexo博客 新建文件夹：mkdir blog 所有博客将在此文件中生成，如果博客搭建过程有问题，直接删除该文件重新来即可。 进入blog文件夹：cd blog 初始化博客：hexo init blog 此时blog文件夹的内容为hexo框架的基础内容 启动博客：hexo s 此时将会在 localhost:4000端口启动，浏览器输入 localhost:4000即可查看 新建博客：hexo n 文章名称 给博客加内容： cd source/_posts/ 、vim 文章名称.md 输入内容：因为是基于markdown的，所以也可以直接用 Typora打开博客编辑 将博客部署到github上 打开github： 新建仓库： 安装git部署插件： cnpm install --save hexo-deployer-git 设置_config.yml文件： vim _config.yml 修改deployment如下 部署到远端： git config --global user.email &quot;xxx&quot; git config --global user.name &quot;xxx&quot; hexo cl清理 hexo g生成 hexo d部署到远程Github仓库 更换主题下次更新","categories":[],"tags":[{"name":"乱七八糟","slug":"乱七八糟","permalink":"http://ustcwrn.github.io/tags/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F/"}]},{"title":"文字和文本样式","slug":"文字和文本样式","date":"2022-05-10T08:03:54.000Z","updated":"2022-05-11T13:56:21.589Z","comments":true,"path":"2022/05/10/文字和文本样式/","link":"","permalink":"http://ustcwrn.github.io/2022/05/10/%E6%96%87%E5%AD%97%E5%92%8C%E6%96%87%E6%9C%AC%E6%A0%B7%E5%BC%8F/","excerpt":"","text":"字体字体大小属性名：font-size 取值：数字+px 谷歌默认16 px 12345&lt;style&gt; p &#123; font-size: 30px; &#125;&lt;/style&gt; 字体粗细属性名：font-weight 取值： 关键字 正常 normal 加粗 bold 纯数字：100-900的整百数 正常 400 加粗 700 字体样式（是否倾斜）属性名： font-style 取值： 正常（默认值）：normal 倾斜：italic 常见字体 无衬线字体 sans-serif 有衬线字体 serif 等宽字体 monospace 字体系列 font-family属性名：font-family 样式的层叠问题若给一个标签设置了相同的格式，下克上 123456&lt;style&gt; p &#123; color: red; color: green; /* 显示绿色 */ &#125;&lt;/style&gt; 字体font相关属性的连写属性名：font（复合属性） 下面的属性会覆盖上面的属性 123456789101112&lt;style&gt; p &#123; /* font-size; font-style; font-weight; font-family;*/ /* font: style weight size 字体 */ font-weight: 微软雅黑; font: italic 700 66px 宋体; &#125;&lt;/style&gt; 文本文本缩进属性名：text-indent 取值： 数字+px 数字+em （em为一个字的大小） 文本水平对齐方式属性名：text-align 取值： 属性值 效果 left 左对齐 center 居中对齐 right 右对齐 center：可以让文本、span标签、a标签、input标签、img标签居中，但需要给其父元素设置 例如： 1234&lt;body&gt; &lt;p&gt;段落文字&lt;/p&gt; &lt;img src=&quot;./images/1.jpg&quot; alt=&quot;&quot;&gt;&lt;/body&gt; 若给img居中，则要在&lt;style&gt; &lt;/style&gt;中，添加body&#123;...&#125; 文本修饰属性名：text-decoration 取值： 属性值 效果 underline 下划线 line-through 删除线 overline 上划线 none 无装饰线 字体和文本样式行高作用：控制一行的上下行距 属性名：line-height 取值： 数字+px 倍数：当前标签font-size的倍数（数字） font连写时，size和line-height中间要用&#x2F;隔开","categories":[],"tags":[{"name":"CSS基础","slug":"CSS基础","permalink":"http://ustcwrn.github.io/tags/CSS%E5%9F%BA%E7%A1%80/"}]},{"title":"选择器","slug":"选择器","date":"2022-05-10T07:27:00.000Z","updated":"2022-05-10T08:04:49.532Z","comments":true,"path":"2022/05/10/选择器/","link":"","permalink":"http://ustcwrn.github.io/2022/05/10/%E9%80%89%E6%8B%A9%E5%99%A8/","excerpt":"","text":"选择器1. 标签选择器选中的所有标签都生效css 2. 类选择器解决标签选择器的问题 结构：.类名{ css属性名：属性值；} 123456789101112131415161718192021&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style&gt; .red &#123; color: red; &#125; .green &#123; color: green; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;p class=&quot;red&quot;&gt;p1&lt;/p&gt; &lt;p class=&quot;green&quot;&gt;p2&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 注意：一个标签可以同时有多个类名，类名之间用空格隔开 3. id选择器结构：#id属性值{ css属性名：属性值；} 注意：id属性唯一，在同一页面中不可重复，通常配合js使用 4. 通配符选择器结构: *{ css属性名：属性值；}","categories":[],"tags":[{"name":"CSS基础","slug":"CSS基础","permalink":"http://ustcwrn.github.io/tags/CSS%E5%9F%BA%E7%A1%80/"}]},{"title":"CSS引入方式","slug":"CSS引入方式","date":"2022-05-10T07:22:36.000Z","updated":"2022-05-10T08:04:55.515Z","comments":true,"path":"2022/05/10/CSS引入方式/","link":"","permalink":"http://ustcwrn.github.io/2022/05/10/CSS%E5%BC%95%E5%85%A5%E6%96%B9%E5%BC%8F/","excerpt":"","text":"CSS引入方式： 内联式： CSS写在style标签中 外联式： CSS写在一个单独的.css文件中，需要通过link标签在网页中引入 1234567891011121314&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=&lt;device-width&gt;, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;!-- 关系：样式表 --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;./my.css&quot;&gt; &lt;/head&gt;&lt;body&gt; &lt;p&gt;这是p标签&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 行内式：CSS写在标签的style属性中 123&lt;body&gt; &lt;div style=&quot;color: green; font-size: 30px;&quot;&gt;这是div标签&lt;/div&gt;&lt;/body&gt;","categories":[],"tags":[{"name":"CSS基础","slug":"CSS基础","permalink":"http://ustcwrn.github.io/tags/CSS%E5%9F%BA%E7%A1%80/"}]},{"title":"我的第一篇博客","slug":"My first blog","date":"2022-05-09T07:37:51.000Z","updated":"2022-05-09T13:09:53.716Z","comments":true,"path":"2022/05/09/My first blog/","link":"","permalink":"http://ustcwrn.github.io/2022/05/09/My%20first%20blog/","excerpt":"","text":"test","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2022-05-09T07:32:55.426Z","updated":"2022-05-09T07:32:55.427Z","comments":true,"path":"2022/05/09/hello-world/","link":"","permalink":"http://ustcwrn.github.io/2022/05/09/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"乱七八糟","slug":"乱七八糟","permalink":"http://ustcwrn.github.io/tags/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F/"},{"name":"CSS基础","slug":"CSS基础","permalink":"http://ustcwrn.github.io/tags/CSS%E5%9F%BA%E7%A1%80/"}]}